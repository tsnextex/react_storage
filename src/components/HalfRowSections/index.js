import React from "react";
import { useHistory } from "react-router-dom";
import { HalfRowSectionsContainer, CustomGrid, CustomSvg } from "./style";
import { Grid, Typography, Button } from "@material-ui/core";
import find_storage from '../../img/home/find_storage.png';
import size_guide from '../../img/home/size_guide.png';

const getBackgroundImg = index => {
  return index === 0 ? find_storage : size_guide;
};

export const HalfRowSections = props => {

  const {
    content = {},
    searchLatLng,
    latLng,
    setSearching
  } = props;

  let history = useHistory();

  const determineLocation = title => {

    // determine which location to link to
    // size guide
    // search
    // map (if nothing to use for search)
    if (title === 'size guide') {

      // valid location selected
      const newLocation = {
        pathname: `/storage-calculator`
      };
  
      history.push(newLocation);

    } else {
      
      // fetch properties
      setSearching(true);
    }
  }

  return (
    <HalfRowSectionsContainer>
      <Grid
        container
        justify="center"
        alignItems="center"
        className="root"
      >
        <Grid
          item
          xs={12}
          container
          direction="column"
          justify="center"
          alignItems="center"
          className="rootCenter"
        >
          <Grid
            item
            className="sectionsRow"
            container
            justify="center"
            alignItems="center"
          >
            {content.sections !== undefined &&
              content.sections.map((x, y) => (
                <CustomGrid
                  className="section"
                  key={x.title}
                  item
                  xs={12}
                  sm={6}
                  bgUrl={getBackgroundImg(y)}
                  gradient={
                    [
                      "linear-gradient(43deg, rgba(27,60,146, .98) 15%, rgba(27,60,146, .65) 100%)",
                      "linear-gradient(43deg, rgba(13,29,72, .98) 15%, rgba(13,29,72, .65) 100%)",
                    ][y]
                  }
                >
                  <CustomSvg size={y === 0 ? 60 : 75} viewBox="0 0 50 50">
                    {x.title === "Find Storage" ? (
                      <g fill="#FFF" transform="translate(4.612245, 0.000000)">
                        <path
                          d="M19.8877551,0 C30.6573077,0 39.3877551,8.72105084 39.3877551,19.4790122 C39.3877551,24.6346369 36.813281,28.5954681 34.108903,32.8067419 C30.8714878,37.8480644 26.0799241,43.5791504 19.7342118,50 C13.1668564,43.5791504 8.24945452,37.5920423 4.98200611,32.0386755 C2.63316207,28.0465719 0.387755102,24.2648355 0.387755102,19.4790122 C0.387755102,8.72105084 9.11820248,0 19.8877551,0 Z M20.3877551,8 C14.3126229,8 9.3877551,12.9248678 9.3877551,19 C9.3877551,25.0751322 14.3126229,30 20.3877551,30 C26.4628873,30 31.3877551,25.0751322 31.3877551,19 C31.3877551,12.9248678 26.4628873,8 20.3877551,8 Z"
                          id="Combined-Shape"
                          fill="#FFF"
                        ></path>
                      </g>
                    ) : (
                      <g fill="#FFF" transform="translate(4.612245, 0.000000)">
                        <path
                          d="M48.6974779,32.4350366 C49.2707246,32.4386124 49.6556488,32.8736558 49.6571648,33.561259 C49.6619457,35.7323256 49.6622955,37.9033922 49.6507513,40.0744588 C49.6462036,40.9241509 49.2816858,41.2598303 48.4260137,41.2597117 L44.5974113,41.2597117 L44.5974113,41.2597117 L44.5974113,41.2574588 C43.3064401,41.2574588 42.0151191,41.2476173 40.7243811,41.2640989 C40.6800161,41.2646682 40.6391382,41.2634725 40.6015948,41.26017 L37.1668306,41.2597117 L37.1668306,41.2597117 L37.1668306,41.2574588 C35.8460591,41.2574588 34.5249297,41.2476173 33.2043969,41.2640989 C32.854609,41.2684861 32.716698,41.168055 32.7192033,40.8062896 C32.731372,38.9972256 32.7305369,37.1878058 32.7188093,35.3786231 C32.716698,35.0665397 32.8097521,34.9442913 33.1331747,34.9624329 C33.5265072,34.9844874 33.9234186,34.9822345 34.3167511,34.95852 C34.6500756,34.9384812 34.7735512,35.0469752 34.7648423,35.391429 C34.7445612,36.1898977 34.7511227,36.9895522 34.7674669,37.7883766 C34.7767723,38.2420359 35.056531,38.5671623 35.485057,38.6587004 C35.9029653,38.7478671 36.2485777,38.6008369 36.4568757,38.2423916 C36.5555369,38.0725954 36.5782039,37.8418529 36.5816636,37.6379078 C36.5931164,36.9297915 36.5956217,36.2209638 36.5724775,35.5134403 C36.5597124,35.1286718 36.638689,34.9146481 37.0939382,34.9611286 C37.4693757,34.9996647 37.8524483,34.9780845 38.2314647,34.9640929 C38.4928513,34.9544885 38.5729016,35.0649983 38.5696805,35.3130524 C38.5593014,36.1118769 38.5670559,36.9109385 38.5645506,37.7098815 C38.5627611,38.2415616 38.9381986,38.681585 39.4140867,38.6983037 C39.7750208,38.7110094 40.0919476,38.5184362 40.2591795,38.2180079 C40.2588281,37.2711663 40.2557451,36.3248623 40.2497498,35.3786231 C40.248464,35.1841712 40.2832901,35.0634178 40.3861952,35.0044027 C40.3866707,34.5257559 40.3865209,34.0461682 40.3870984,33.5665948 C40.3880528,32.9030618 40.7967749,32.4316167 41.3614223,32.4350366 C41.9480209,32.4386124 42.3417113,32.8736558 42.3433815,33.561259 C42.3467697,35.1027363 42.3479928,36.6442135 42.3441899,38.1856908 C42.4544863,38.4287296 42.671,38.5969185 42.9536998,38.6587004 C43.3620623,38.7478671 43.6998767,38.6008369 43.9034749,38.2423916 C44.0000267,38.0725954 44.0220656,37.8418529 44.0254473,37.6379078 C44.0366417,36.9297915 44.0390905,36.2209638 44.0164684,35.5134403 C44.0039913,35.1286718 44.0811861,34.9146481 44.5261636,34.9611286 C44.8931301,34.9996647 45.2675596,34.9780845 45.6380243,34.9640929 C45.8935132,34.9544885 45.9717575,35.0649983 45.968609,35.3130524 C45.9584641,36.1118769 45.9660436,36.9109385 45.9635949,37.7098815 C45.9618457,38.2415616 46.3288123,38.681585 46.793963,38.6983037 C47.3141529,38.7170382 47.7408229,38.289465 47.7428053,37.7279045 C47.7477028,36.3408408 47.7433883,34.9536585 47.7450208,33.5665948 C47.7459537,32.9030618 48.1454539,32.4316167 48.6974779,32.4350366 Z M25.6141384,8.39358318 C27.2699046,9.10999765 27.5547932,10.6076605 27.519719,12.2436356 C27.4719989,14.4668377 27.4270228,16.6922008 27.4797534,18.9142023 C27.4940695,19.516317 27.8049655,20.1398029 28.0831734,20.7016966 C28.9280567,22.4075482 29.2087699,24.2443884 29.2357317,26.0993579 C29.2991994,30.4627987 29.2655567,34.8275602 29.2634093,39.1918414 C29.2626935,40.5695615 28.7438574,41.0542548 27.3462566,41.0508931 C25.176307,41.0453702 23.0062381,41.0493323 20.8361691,41.0493323 L20.8361691,41.0541348 C18.7725159,41.0541348 16.7087434,41.0573765 14.6450901,41.0535345 C8.69440085,41.0426087 3.25324231,37.3863376 1.07088547,31.8366768 C0.148218452,29.4901703 -0.21326087,27.057939 0.12423913,24.4949593 C0.541312301,21.3272236 1.85850477,18.6134451 3.95651644,16.311842 C5.89371156,14.1867312 8.3035737,12.7434569 11.1330143,12.0500944 C13.4312116,11.4870001 15.7124682,11.4818374 17.9992126,12.0594593 C18.5759093,12.2050955 18.5946394,11.8513906 18.5765058,11.4525421 C18.5139926,10.0741016 19.0922402,9.06101205 20.3098171,8.43740609 C20.6046076,8.28636714 20.9437778,8.1711069 21.2708987,8.14469309 L21.563056,8.11987937 L21.563056,8.11987937 L22.1495106,8.06776552 C23.3241872,7.96696659 24.5051246,7.91371636 25.6141384,8.39358318 Z M14.7691622,17.0432164 C9.51339608,17.013849 5.58579799,20.8817907 5.34516967,26.2947 C5.44395016,31.3589471 9.16169936,35.5250047 14.4092338,35.6357026 C19.6065429,35.7453199 23.8055488,31.7534733 23.8624549,26.3739415 C23.9154242,21.3884556 20.0237354,17.0727998 14.7691622,17.0432164 Z M22.5255779,10.8292963 L22.2572763,10.8295215 C21.3575404,10.8355938 21.3537129,10.9274276 21.3053765,12.0306443 C21.296071,12.2436356 21.2979799,12.4585479 21.2704215,12.6692581 C21.2116066,13.1196135 21.4306416,13.3638211 21.8058404,13.5760921 C22.2999814,13.8555982 22.7632238,14.1929745 23.2250345,14.5262687 C23.680403,14.8551206 24.11728,15.2099061 24.7240403,15.6779107 C24.7240403,14.0731519 24.7416967,12.6870274 24.7002996,11.3027038 C24.6954083,11.140499 24.3766384,10.8751603 24.1812248,10.8527086 C23.6356654,10.7901559 23.0782953,10.8302568 22.5255779,10.8292963 Z"
                          id="Combined-Shape"
                          fill="#FFF"
                        ></path>
                      </g>
                    )}
                  </CustomSvg>
                  <Typography className="sectionTitle">
                    {x.title}
                  </Typography>
                  <Typography className="sectionContent">
                    {x.text}
                  </Typography>
                  <div className="buttonWrapper">
                    <Button
                      onClick={() => determineLocation(x.title.toLowerCase())}
                      className="button"
                      variant="contained"
                      color="secondary"
                      children={x.button_text}
                    />
                  </div>
                </CustomGrid>
              ))}
          </Grid>
        </Grid>
      </Grid>
    </HalfRowSectionsContainer>
  );
};